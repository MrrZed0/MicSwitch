<mah:MetroWindow x:Class="MicSwitch.MainWindow.Views.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:tb="http://www.hardcodet.net/taskbar"
                 xmlns:hotkeys="clr-namespace:PoeShared.UI.Hotkeys;assembly=PoeShared.Wpf"
                 xmlns:blue="http://www.nuget.org/Blue.MVVM"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:eye="http://coderush.net/poeeye/"
                 xmlns:viewModels="clr-namespace:MicSwitch.MainWindow.ViewModels"
                 xmlns:fa="http://schemas.fontawesome.io/icons/"
                 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                 xmlns:models="clr-namespace:MicSwitch.MainWindow.Models"
                 xmlns:gif="http://wpfanimatedgif.codeplex.com"
                 xmlns:modularity="clr-namespace:MicSwitch.Modularity"
                 xmlns:st="http://schemas.spicytaco.io/"
                 xmlns:converters="http://schemas.kent.boogaart.com/converters"
                 xmlns:ui="clr-namespace:PoeShared.UI;assembly=PoeShared.Wpf"
                 mc:Ignorable="d"
                 d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
                 WindowState="{Binding WindowState, Mode=TwoWay}"
                 Visibility="{Binding Visibility, Mode=TwoWay}"
                 ShowInTaskbar="{Binding ShowInTaskbar, Mode=TwoWay}"
                 WindowStartupLocation="CenterScreen"
                 ResizeMode="CanMinimize"
                 WindowStyle="SingleBorderWindow"
                 ShowActivated="True"
                 TextElement.FontWeight="Regular"
                 TextOptions.TextFormattingMode="Ideal"
                 TextOptions.TextRenderingMode="Auto"
                 Loaded="OnLoaded"
                 Unloaded="OnUnloaded"
                 Closed="OnClosed"
                 Closing="OnClosing"
                 UseLayoutRounding="True"
                 RenderOptions.EdgeMode="Aliased"
                 Title="{Binding Title}" Width="460" SizeToContent="Height"
                 Icon="{Binding ImageProvider.MicrophoneImage}">

    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type st:StackPanel}">
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="MarginBetweenChildren" Value="5" />
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="SettingsLabelStyle">
                <Setter Property="TextAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="IsHitTestVisible" Value="True" />
            </Style>
            <Style TargetType="{x:Type Image}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.66" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <DockPanel>
            <tb:TaskbarIcon Visibility="{Binding TrayIconVisibility, Mode=TwoWay}"
                            ToolTipText="{Binding Title}"
                            DoubleClickCommand="{Binding ShowAppCommand}">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Show main window" Command="{Binding ShowAppCommand}" />
                        <Separator />
                        <MenuItem Header="Exit app" Command="{Binding ExitAppCommand}" />
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>

                <i:Interaction.Behaviors>
                    <models:TaskBarBitmapImageBehavior Icon="{Binding ImageProvider.MicrophoneImageAsIcon}" />
                </i:Interaction.Behaviors>
            </tb:TaskbarIcon>

            <st:AutoGrid Columns="120,*" ChildMargin="5" RowHeight="32">
                <TextBlock Style="{StaticResource SettingsLabelStyle}" st:AutoGrid.RowHeightOverride="40"
                           Text="Microphone:" />
                <st:StackPanel st:AutoGrid.RowHeightOverride="40">
                    <ComboBox st:StackPanel.Fill="Fill"
                              ItemsSource="{Binding Microphones}"
                              SelectedItem="{Binding MicrophoneLine}"
                              DisplayMemberPath="Name" />
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Mute:" />
                <st:StackPanel>
                    <ToggleButton
                        ToolTip="Microphone mute is system-wide"
                        HorizontalAlignment="Left"
                        Command="{Binding MuteMicrophoneCommand}"
                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                        IsChecked="{Binding MicrophoneMuted, Mode=OneWay}" />
                    <fa:FontAwesome Icon="Warning"
                                    Margin="5,0"
                                    Visibility="{Binding MuteMicrophoneCommand.Error, Converter={StaticResource NullToCollapsedConverter}}"
                                    Foreground="{StaticResource NegativeBrush}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    ToolTip="{Binding MuteMicrophoneCommand.Error}"
                                    FontSize="18" />
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Volume:" />
                <st:StackPanel>
                    <ToggleButton
                        ToolTip="If enabled application will set microphone(s) volume to specified value"
                        HorizontalAlignment="Left"
                        IsChecked="{Binding MicrophoneVolumeControlEnabled}" />

                    <Slider Width="180"
                            IsEnabled="{Binding MicrophoneVolumeControlEnabled}"
                            Visibility="{Binding MicrophoneVolumeControlEnabled, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"
                            Value="{Binding MicrophoneVolume}"
                            Minimum="0" Maximum="1"
                            Margin="5,4,5,0"
                            TickFrequency="0.1" />

                    <TextBlock
                        MinWidth="45">
                        <TextBlock.Text>
                            <Binding Path="MicrophoneVolume" StringFormat="{}{0:F1}%">
                                <Binding.Converter>
                                    <blue:MultiplyDoubleConverter MinValue="0"
                                                                  Factor="100"
                                                                  MaxValue="100" />
                                </Binding.Converter>
                            </Binding>
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBlock Style="{StaticResource WarningIconTextBlock}" Margin="2.5,0,0,0"
                               Visibility="{Binding MicrophoneVolumeControlEnabled, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}"
                               ToolTip="May be inaccurate because Volume control is disabled" />
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Notification:" />
                <st:StackPanel>
                    <TextBlock Text="when muted" />
                    <ContentPresenter Width="22" Height="22" Content="{Binding AudioSelectorWhenMuted}" />
                    <TextBlock Text="when un-muted " />
                    <ContentPresenter Width="22" Height="22" Content="{Binding AudioSelectorWhenUnmuted}" />
                    <ui:ButtonEx Command="{Binding AddSoundCommand}"
                                 st:StackPanel.Fill="Fill"
                                 MinWidth="90"
                                 Icon="&#xf115;"
                                 Content="Load..." 
                                 Margin="0"/>
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Show overlay:" />
                <st:StackPanel>
                    <RadioButton
                        VerticalContentAlignment="Center"
                        IsChecked="{Binding Overlay.OverlayVisibilityMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:OverlayVisibilityMode.Always}}"
                        Content="Always" />
                    <RadioButton
                        VerticalContentAlignment="Center"
                        IsChecked="{Binding Overlay.OverlayVisibilityMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:OverlayVisibilityMode.WhenMuted}}"
                        Content="When muted" />
                    <RadioButton
                        VerticalContentAlignment="Center"
                        IsChecked="{Binding Overlay.OverlayVisibilityMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:OverlayVisibilityMode.WhenUnmuted}}"
                        Content="When un-muted" />
                    <RadioButton
                        VerticalContentAlignment="Center"
                        IsChecked="{Binding Overlay.OverlayVisibilityMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:OverlayVisibilityMode.Never}}"
                        Content="Hide" />
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Icon:"
                           IsEnabled="{Binding ShowOverlaySettings}" />
                <st:StackPanel IsEnabled="{Binding ShowOverlaySettings}">
                    <TextBlock Text="when muted" />
                    <Border Width="22" Height="22" BorderBrush="{StaticResource SecondaryAccentBrush}" BorderThickness="1"
                            Background="Transparent"
                            ToolTip="Click to select an icon">
                        <Image
                            gif:ImageBehavior.RepeatBehavior="Forever"
                            gif:ImageBehavior.AnimatedSource="{Binding ImageProvider.MutedMicrophoneImage}" />
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding SelectMutedMicrophoneIconCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>
                    <TextBlock Text="when un-muted " />
                    <Border Width="22" Height="22" BorderBrush="{StaticResource SecondaryAccentBrush}" BorderThickness="1"
                            Background="Transparent"
                            ToolTip="Click to select an icon">
                        <Image gif:ImageBehavior.RepeatBehavior="Forever"
                               gif:ImageBehavior.AnimatedSource="{Binding ImageProvider.StreamingMicrophoneImage}" />
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding SelectMicrophoneIconCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>
                    <ui:ButtonEx Command="{Binding ResetMicrophoneIconsCommand}"
                                 Icon="&#xf0e2;"
                                 Margin="0"
                                 Content="Reset icons" />
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Mute mode:" />
                <st:StackPanel>
                    <RadioButton
                        VerticalContentAlignment="Center"
                        ToolTip="Toggle Mute state on Hotkey press"
                        IsChecked="{Binding MuteMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:MuteMode.ToggleMute}}"
                        Content="Toggle" />
                    <RadioButton
                        VerticalContentAlignment="Center"
                        ToolTip="Unmute microphone while Hotkey is held"
                        IsChecked="{Binding MuteMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:MuteMode.PushToTalk}}"
                        Content="Push-To-Talk" />
                    <RadioButton
                        VerticalContentAlignment="Center"
                        ToolTip="Mute microphone while Hotkey is held"
                        IsChecked="{Binding MuteMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:MuteMode.PushToMute}}"
                        Content="Push-To-Mute" />
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Hotkey:" />
                <st:StackPanel>
                    <hotkeys:HotKeyBox st:StackPanel.Fill="Fill" HotKey="{Binding Hotkey}" Background="Transparent" AcceptsTab="False" AcceptsReturn="False"
                                       AcceptsMouseKeys="True" />
                    <TextBlock Margin="10,0" Text="or" FontWeight="Bold" />
                    <hotkeys:HotKeyBox st:StackPanel.Fill="Fill" HotKey="{Binding HotkeyAlt}" Background="Transparent" AcceptsTab="False" AcceptsReturn="False"
                                       AcceptsMouseKeys="True" />
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Suppress Hotkey:" />
                <st:StackPanel>
                    <ToggleButton
                        HorizontalAlignment="Left"
                        ToolTip="If enabled other applications will not react to pressed hotkey. May not work for mouse buttons of some special keys"
                        IsChecked="{Binding SuppressHotkey}" />
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Minimize on Close:" />
                <st:StackPanel>
                    <ToggleButton
                        HorizontalAlignment="Left"
                        ToolTip="If enabled application will minimize instead of close when X button is pressed. App still could be closed via taskbar icon"
                        IsChecked="{Binding MinimizeOnClose}" />
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Run at start:" />
                <st:StackPanel>
                    <ToggleButton
                        HorizontalAlignment="Left"
                        IsChecked="{Binding RunAtLogin, Mode=OneWay}"
                        Command="{Binding RunAtLoginToggleCommand}"
                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Start Minimized:" />
                <st:StackPanel>
                    <ToggleButton
                        HorizontalAlignment="Left"
                        ToolTip="Minimize application window on startup"
                        IsChecked="{Binding StartMinimized}" />
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Check for updates:" />
                <st:StackPanel>
                    <ToggleButton
                        HorizontalAlignment="Left"
                        ToolTip="Periodically check for updates and report if new version is available"
                        IsChecked="{Binding ApplicationUpdater.CheckForUpdates, Mode=TwoWay}" />
                    <TextBlock IsHitTestVisible="True">
                        <Run Text="update source:" />
                        <Hyperlink NavigateUri="{Binding ApplicationUpdater.UpdateSource.Uri}"
                                   Command="{Binding ApplicationUpdater.OpenUri}"
                                   CommandParameter="{Binding ApplicationUpdater.UpdateSource.Uri}"
                                   ToolTip="{Binding ApplicationUpdater.UpdateSource.Uri}">
                            <TextBlock Text="{Binding ApplicationUpdater.UpdateSource.Description}" IsHitTestVisible="True" />
                        </Hyperlink>
                    </TextBlock>
                </st:StackPanel>

                <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Contacts:" />
                <st:StackPanel>
                    <TextBlock IsHitTestVisible="True">
                        <Run Text="Xab3r via " />
                        <Hyperlink NavigateUri="{Binding Source={x:Static modularity:MicSwitchConfig.DiscordInviteLink}}"
                                   Command="{Binding ApplicationUpdater.OpenUri}"
                                   CommandParameter="{x:Static modularity:MicSwitchConfig.DiscordInviteLink}"
                                   ToolTip="{x:Static modularity:MicSwitchConfig.DiscordInviteLink}">
                            <TextBlock Text="Discord" IsHitTestVisible="True" />
                        </Hyperlink>
                    </TextBlock>
                </st:StackPanel>

                <DockPanel
                    Margin="5,5"
                    IsEnabled="{Binding ShowOverlaySettings}"
                    Grid.ColumnSpan="2"
                    st:AutoGrid.RowHeightOverride="40">
                    <ui:ButtonEx Command="{Binding ResetOverlayPositionCommand}"
                                 Icon="&#xf0e2;"
                                 Content="Reset overlay" />
                    <Grid DockPanel.Dock="Right" Margin="5,0,0,0">
                        <ui:ButtonEx Command="{Binding ToggleOverlayLockCommand}" Margin="0"
                                     Icon="&#xf09c;"
                                     Visibility="{Binding Overlay.IsLocked, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"
                                     Content="Unlock overlay" />
                        <ui:ButtonEx Command="{Binding ToggleOverlayLockCommand}" Margin="0"
                                     Icon="&#xf023;"
                                     Visibility="{Binding Overlay.IsLocked, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}"
                                     Content="Lock overlay" />
                    </Grid>
                </DockPanel>
            </st:AutoGrid>
        </DockPanel>

        <materialDesign:DrawerHost IsBottomDrawerOpen="{Binding ApplicationUpdater.IsOpen}">
            <materialDesign:DrawerHost.BottomDrawerContent>
                <Grid Height="60">
                    <ContentPresenter Content="{Binding ApplicationUpdater}" />
                </Grid>
            </materialDesign:DrawerHost.BottomDrawerContent>
        </materialDesign:DrawerHost>
    </Grid>

    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands ShowSeparators="True">
            <ui:ButtonEx
                Margin="5,0"
                ToolTip="Open logs/config folder"
                Icon="&#xF07C;"
                Command="{Binding OpenAppDataDirectoryCommand}" />
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands ShowSeparators="True">
            <StackPanel Orientation="Horizontal" ToolTip="Application is running without Administrator privileges, not all features may work correctly, e.g. global hotkeys"
                        Visibility="{Binding IsElevated, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}">
                <materialDesign:PackIcon VerticalAlignment="Center" Kind="ShieldWarning" />
                <TextBlock Margin="2.5,0,0,0" Text="USER-MODE" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <ui:ButtonEx Command="{Binding ApplicationUpdater.CheckForUpdatesCommand}"
                             ToolTip="Check for updates"
                             Margin="5,0"
                             Icon="&#xF0ED;" />
                <ui:ButtonEx Command="{Binding ApplicationUpdater.RestartCommand}"
                             ToolTip="Restart application"
                             Margin="5,0"
                             Visibility="{Binding IsDebugMode, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"
                             Icon="&#xf021;" />
            </StackPanel>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
</mah:MetroWindow>