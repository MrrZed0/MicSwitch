<mah:MetroWindow x:Class="MicSwitch.MainWindow.Views.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:tb="http://www.hardcodet.net/taskbar"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:viewModels="clr-namespace:MicSwitch.MainWindow.ViewModels"
                 xmlns:fa="http://schemas.fontawesome.io/icons/"
                 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                 xmlns:models="clr-namespace:MicSwitch.MainWindow.Models"
                 xmlns:gif="http://wpfanimatedgif.codeplex.com"
                 xmlns:modularity="clr-namespace:MicSwitch.Modularity"
                 xmlns:st="http://schemas.spicytaco.io/"
                 xmlns:eye="clr-namespace:PoeShared.UI;assembly=PoeShared.Wpf"
                 xmlns:native="clr-namespace:PoeShared.Native;assembly=PoeShared.Wpf"
                 mc:Ignorable="d"
                 d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
                 WindowState="{Binding WindowState, Mode=TwoWay}"
                 Visibility="{Binding Visibility, Mode=TwoWay}"
                 ShowInTaskbar="{Binding ShowInTaskbar, Mode=TwoWay}"
                 WindowStartupLocation="CenterScreen"
                 ResizeMode="CanResizeWithGrip"
                 WindowStyle="SingleBorderWindow"
                 ShowActivated="True"
                 TextElement.FontWeight="Regular"
                 TextOptions.TextFormattingMode="Ideal"
                 TextOptions.TextRenderingMode="Auto"
                 Loaded="OnLoaded"
                 Unloaded="OnUnloaded"
                 Closed="OnClosed"
                 Closing="OnClosing"
                 UseLayoutRounding="True"
                 RenderOptions.EdgeMode="Aliased"
                 Title="{Binding Title}"
                 MaxWidth="{Binding MaxSize.Width, Mode=OneWay}" 
                 MaxHeight="{Binding MaxSize.Height, Mode=OneWay}" 
                 MinWidth="{Binding MinSize.Width, Mode=OneWay}"
                 MinHeight="{Binding MinSize.Height, Mode=OneWay}"
                 Width="{Binding Width, Mode=TwoWay}"
                 Height="{Binding Height, Mode=TwoWay}"
                 Left="{Binding Left, Mode=TwoWay}"
                 Top="{Binding Top, Mode=TwoWay}"
                 SizeToContent="Manual"
                 Icon="{Binding ImageProvider.MicrophoneImage}">
    <Window.Resources>
        <eye:SharedResourceDictionary>
            <Style TargetType="{x:Type st:StackPanel}">
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="MarginBetweenChildren" Value="5" />
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="SettingsLabelStyle" BasedOn="{StaticResource DefaultTextBlockStyleKey}">
                <Setter Property="TextAlignment" Value="Right" />
                <Setter Property="IsHitTestVisible" Value="True" />
            </Style>
            <Style TargetType="{x:Type Image}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.66" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Separator}">
                <Setter Property="st:AutoGrid.RowHeightOverride" Value="7" />
                <Setter Property="Margin" Value="5,0" />
            </Style>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource SlimScrollBarStyleKey}">
                <Setter Property="Foreground" Value="{StaticResource OverlayBackgroundBrushKey}" />
                <Setter Property="Background" Value="{StaticResource OverlayForegroundBrushKey}" />
            </Style>
        </eye:SharedResourceDictionary>
    </Window.Resources>

    <Grid>
        <DockPanel>
            <tb:TaskbarIcon Visibility="{Binding TrayIconVisibility, Mode=TwoWay}"
                            ToolTipText="{Binding Title}"
                            LeftClickCommand="{Binding MicrophoneController.MuteMicrophoneCommand}"
                            DoubleClickCommand="{Binding ShowAppCommand}">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Show main window" Command="{Binding ShowAppCommand}" />
                        <Separator />
                        <MenuItem Header="Exit app" Command="{Binding ExitAppCommand}" />
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>

                <i:Interaction.Behaviors>
                    <models:TaskBarBitmapImageBehavior Icon="{Binding ImageProvider.MicrophoneImageAsIcon}" />
                </i:Interaction.Behaviors>
            </tb:TaskbarIcon>

            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <st:AutoGrid Columns="120,*" ChildMargin="5" RowHeight="32">
                    <TextBlock Style="{StaticResource SettingsLabelStyle}" st:AutoGrid.RowHeightOverride="40"
                               Text="Microphone:" />
                    <st:StackPanel st:AutoGrid.RowHeightOverride="40">
                        <ComboBox st:StackPanel.Fill="Fill"
                                  ItemsSource="{Binding MicrophoneController.Microphones}"
                                  SelectedItem="{Binding MicrophoneController.MicrophoneLine}"
                                  DisplayMemberPath="Name"
                                  ToolTip="Microphone line"/>
                    </st:StackPanel>

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Mute:" />
                    <st:StackPanel>
                        <CheckBox
                            ToolTip="Mute microphone on system-level"
                            HorizontalAlignment="Left"
                            Command="{Binding MicrophoneController.MuteMicrophoneCommand}"
                            CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                            IsChecked="{Binding MicrophoneController.MicrophoneMuted, Mode=OneWay}" />
                        <fa:FontAwesome Icon="Warning"
                                        Margin="5,0"
                                        Visibility="{Binding MicrophoneController.MuteMicrophoneCommand.Error, Converter={StaticResource NullToCollapsedConverter}}"
                                        Foreground="{StaticResource NegativeBrush}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        ToolTip="{Binding MicrophoneController.MuteMicrophoneCommand.Error}"
                                        FontSize="18" />
                    </st:StackPanel>

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Microphone volume:" />
                    <st:StackPanel>
                        <CheckBox
                            ToolTip="Enable microphone volume control"
                            HorizontalAlignment="Left"
                            IsChecked="{Binding MicrophoneController.MicrophoneVolumeControlEnabled}" />

                        <Slider Width="180"
                                IsEnabled="{Binding MicrophoneController.MicrophoneVolumeControlEnabled}"
                                Visibility="{Binding MicrophoneController.MicrophoneVolumeControlEnabled, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"
                                Value="{Binding MicrophoneController.MicrophoneVolume}"
                                Minimum="0" Maximum="1"
                                Margin="5,4,5,0"
                                TickFrequency="0.1" />

                        <TextBlock
                            MinWidth="45">
                            <TextBlock.Text>
                                <Binding Path="MicrophoneController.MicrophoneVolume" StringFormat="{}{0:F1}%" Converter="{StaticResource DoubleToPercentConverter}" />
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock Style="{StaticResource WarningIconTextBlock}" Margin="2.5,0,0,0"
                                   Visibility="{Binding MicrophoneController.MicrophoneVolumeControlEnabled, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}"
                                   ToolTip="May be inaccurate because Volume control is disabled" />
                    </st:StackPanel>

                    <Separator Grid.ColumnSpan="2" />

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Notification:" />
                    <st:StackPanel>
                        <TextBlock Text="when muted" />
                        <ContentPresenter Width="22" Height="22" 
                                          Content="{Binding AudioSelectorWhenMuted}"
                                          ContentTemplate="{StaticResource AudioNotificationSelectorButtonTemplate}" />
                        <TextBlock Text="when un-muted " />
                        <ContentPresenter Width="22" Height="22" 
                                          Content="{Binding AudioSelectorWhenUnmuted}"
                                          ContentTemplate="{StaticResource AudioNotificationSelectorButtonTemplate}" />
                        <eye:ButtonEx Command="{Binding AddSoundCommand}"
                                      st:StackPanel.Fill="Fill"
                                      MinWidth="90"
                                      HorizontalContentAlignment="Left"
                                      Icon="&#xf115;"
                                      Content="Load..."
                                      ToolTip="Load custom notification sound"
                                      Margin="0" />
                    </st:StackPanel>

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Notification volume:" />
                    <st:StackPanel>
                        <Slider Width="180"
                                Value="{Binding AudioNotificationVolume}"
                                Minimum="0" Maximum="1"
                                Margin="5,4,5,0"
                                TickFrequency="0.05"
                                ToolTip="Notification volume"/>
                        <TextBlock
                            MinWidth="45">
                            <TextBlock.Text>
                                <Binding Path="AudioNotificationVolume" StringFormat="{}{0:F1}%" Converter="{StaticResource DoubleToPercentConverter}" />
                            </TextBlock.Text>
                        </TextBlock>
                    </st:StackPanel>

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Output device:" />
                    <st:StackPanel>
                        <ContentControl st:StackPanel.Fill="Fill" 
                                        Content="{Binding WaveOutDeviceSelector}" />
                    </st:StackPanel>

                    <Separator Grid.ColumnSpan="2" />

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Show overlay:" />
                    <st:StackPanel>
                        <RadioButton
                            VerticalContentAlignment="Center"
                            IsChecked="{Binding Overlay.OverlayVisibilityMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:OverlayVisibilityMode.Always}}"
                            Content="Always" 
                            ToolTip="Always show overlay regardless of microphone state"/>
                        <RadioButton
                            VerticalContentAlignment="Center"
                            IsChecked="{Binding Overlay.OverlayVisibilityMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:OverlayVisibilityMode.WhenMuted}}"
                            Content="When muted"
                            ToolTip="Show overlay only when microphone is muted"/>
                        <RadioButton
                            VerticalContentAlignment="Center"
                            IsChecked="{Binding Overlay.OverlayVisibilityMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:OverlayVisibilityMode.WhenUnmuted}}"
                            Content="When un-muted" 
                            ToolTip="Show overlay only when microphone is active"/>
                        <RadioButton
                            VerticalContentAlignment="Center"
                            IsChecked="{Binding Overlay.OverlayVisibilityMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:OverlayVisibilityMode.Never}}"
                            Content="Hide"
                            ToolTip="Never show overlay"/>
                    </st:StackPanel>

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Icon:"
                               IsEnabled="{Binding ShowOverlaySettings}" />
                    <st:StackPanel IsEnabled="{Binding ShowOverlaySettings}">
                        <TextBlock Text="when muted" />
                        <Border Width="22" Height="22" BorderBrush="{DynamicResource SecondaryHueMidBrush}" BorderThickness="1"
                                Background="Transparent"
                                Cursor="Hand"
                                ToolTip="Click to select an icon for muted state">
                            <Image
                                gif:ImageBehavior.RepeatBehavior="Forever"
                                gif:ImageBehavior.AnimatedSource="{Binding ImageProvider.MutedMicrophoneImage}" />
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding SelectMutedMicrophoneIconCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Border>
                        <TextBlock Text="when un-muted " />
                        <Border Width="22" Height="22" BorderBrush="{DynamicResource SecondaryHueMidBrush}" BorderThickness="1"
                                Background="Transparent"
                                Cursor="Hand"
                                ToolTip="Click to select an icon for un-muted state">
                            <Image gif:ImageBehavior.RepeatBehavior="Forever"
                                   gif:ImageBehavior.AnimatedSource="{Binding ImageProvider.StreamingMicrophoneImage}" />
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding SelectMicrophoneIconCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Border>
                        <eye:ButtonEx Command="{Binding ResetMicrophoneIconsCommand}"
                                      Icon="&#xf0e2;"
                                      Margin="0"
                                      Content="Reset icons" />
                    </st:StackPanel>

                    <Separator Grid.ColumnSpan="2" />

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Mute mode:" />
                    <st:StackPanel>
                        <RadioButton
                            VerticalContentAlignment="Center"
                            ToolTip="Toggle Mute state on Hotkey press"
                            IsChecked="{Binding MicrophoneController.MuteMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:MuteMode.ToggleMute}}"
                            Content="Toggle" />
                        <RadioButton
                            VerticalContentAlignment="Center"
                            ToolTip="Un-mute microphone while Hotkey is held"
                            IsChecked="{Binding MicrophoneController.MuteMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:MuteMode.PushToTalk}}"
                            Content="Push-To-Talk" />
                        <RadioButton
                            VerticalContentAlignment="Center"
                            ToolTip="Mute microphone while Hotkey is held"
                            IsChecked="{Binding MicrophoneController.MuteMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:MuteMode.PushToMute}}"
                            Content="Push-To-Mute" />
                    </st:StackPanel>

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Initial state:"
                               IsEnabled="{Binding MicrophoneController.MuteMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:MuteMode.ToggleMute}}" />
                    <st:StackPanel
                        IsEnabled="{Binding MicrophoneController.MuteMode, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:MuteMode.ToggleMute}}">
                        <RadioButton
                            VerticalContentAlignment="Center"
                            ToolTip="Do not change microphone state on app startup"
                            IsChecked="{Binding MicrophoneController.InitialMicrophoneState, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:MicrophoneState.Any}}"
                            Content="Do not change" />
                        <RadioButton
                            VerticalContentAlignment="Center"
                            ToolTip="Mute microphones on app startup"
                            IsChecked="{Binding MicrophoneController.InitialMicrophoneState, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:MicrophoneState.Mute}}"
                            Content="Mute" />
                        <RadioButton
                            VerticalContentAlignment="Center"
                            ToolTip="Un-mute microphones on app startup"
                            IsChecked="{Binding MicrophoneController.InitialMicrophoneState, Converter={StaticResource EqualToTrueConverter}, ConverterParameter={x:Static models:MicrophoneState.Unmute}}"
                            Content="Un-mute" />
                    </st:StackPanel>

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Hotkey:" />
                    <ContentPresenter Content="{Binding MicrophoneController.Hotkey}"
                                      st:AutoGrid.RowHeightOverride="50" />

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Additional hotkeys:" />
                    <CheckBox
                        HorizontalAlignment="Left"
                        ToolTip="Enable additional hotkeys for more in-depth configuration"
                        IsChecked="{Binding MicrophoneController.EnableAdditionalHotkeys, Mode=TwoWay}" />

                    <st:AutoGrid RowHeightOverride="Auto"
                                 Margin="0"
                                 ColumnSpan="2"
                                 Columns="120,*" ChildMargin="5" RowHeight="50"
                                 Visibility="{Binding MicrophoneController.EnableAdditionalHotkeys, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}">
                        <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="for Toggle:" />
                        <ContentControl Content="{Binding MicrophoneController.HotkeyToggle}" />

                        <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="for Mute:" />
                        <ContentControl Content="{Binding MicrophoneController.HotkeyMute}" />

                        <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="for Un-mute:" />
                        <ContentControl Content="{Binding MicrophoneController.HotkeyUnmute}" />

                        <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="for Push-to-Talk:" />
                        <ContentControl Content="{Binding MicrophoneController.HotkeyPushToTalk}" />

                        <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="for Push-to-Mute:" />
                        <ContentControl Content="{Binding MicrophoneController.HotkeyPushToMute}" />
                    </st:AutoGrid>

                    <Separator Grid.ColumnSpan="2" />

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Minimize on close:" />
                    <st:StackPanel>
                        <CheckBox
                            HorizontalAlignment="Left"
                            ToolTip="If enabled application will minimize instead of close when X button is pressed. App still could be closed via taskbar icon"
                            IsChecked="{Binding MinimizeOnClose}" />
                    </st:StackPanel>

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" 
                               IsEnabled="{Binding ElementName=RunAtLoginCheckbox, Path=IsEnabled}"
                               Text="Run at start:"
                               ToolTip="Run application at system startup"/>
                    <st:StackPanel Orientation="Horizontal">
                        <CheckBox
                            HorizontalAlignment="Left"
                            x:Name="RunAtLoginCheckbox"
                            IsChecked="{Binding RunAtLogin, Mode=OneWay}"
                            Command="{Binding RunAtLoginToggleCommand}"
                            CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Style="{StaticResource WarningIconTextBlock}"
                                   Visibility="{Binding ElementName=RunAtLoginCheckbox, Path=IsEnabled, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}"
                                   ToolTip="This functionality is not available" />
                    </st:StackPanel>

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Start minimized:" />
                    <st:StackPanel>
                        <CheckBox
                            HorizontalAlignment="Left"
                            ToolTip="Minimize application window on startup"
                            IsChecked="{Binding StartMinimized}" />
                    </st:StackPanel>

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Check for updates:" />
                    <st:StackPanel>
                        <CheckBox
                            HorizontalAlignment="Left"
                            ToolTip="Periodically check for updates and report if new version is available"
                            IsChecked="{Binding ApplicationUpdater.CheckForUpdates, Mode=TwoWay}" />
                        <TextBlock IsHitTestVisible="True">
                            <Run Text="source:" />
                            <Hyperlink Command="{Binding ApplicationUpdater.OpenUri}" 
                                       NavigateUri="{Binding ApplicationUpdater.UpdateSource.Uris[0]}"
                                       CommandParameter="{Binding ApplicationUpdater.UpdateSource.Uris[0]}"
                                       ToolTip="{Binding ApplicationUpdater.UpdateSource.Uris[0]}">
                                <TextBlock Text="{Binding ApplicationUpdater.UpdateSource.Name}" IsHitTestVisible="True" />
                            </Hyperlink>
                        </TextBlock>
                    </st:StackPanel>

                    <TextBlock Style="{StaticResource SettingsLabelStyle}" Text="Contacts:" />
                    <st:StackPanel>
                        <TextBlock IsHitTestVisible="True">
                            <Run Text="Xab3r via " />
                            <Hyperlink NavigateUri="{Binding Source={x:Static modularity:MicSwitchConfig.DiscordInviteLink}}"
                                       Command="{Binding ApplicationUpdater.OpenUri}"
                                       CommandParameter="{x:Static modularity:MicSwitchConfig.DiscordInviteLink}"
                                       ToolTip="{x:Static modularity:MicSwitchConfig.DiscordInviteLink}">
                                <TextBlock Text="Discord" IsHitTestVisible="True" />
                            </Hyperlink>
                        </TextBlock>
                    </st:StackPanel>

                    <DockPanel
                        Margin="5,5"
                        IsEnabled="{Binding ShowOverlaySettings}"
                        Grid.ColumnSpan="2"
                        st:AutoGrid.RowHeightOverride="40">
                        <eye:ButtonEx Command="{Binding ResetOverlayPositionCommand}"
                                      Icon="&#xf0e2;"
                                      Content="Reset overlay" />
                        <Grid DockPanel.Dock="Right" Margin="5,0,0,0">
                            <eye:ButtonEx Command="{Binding ToggleOverlayLockCommand}" Margin="0"
                                          Icon="&#xf09c;"
                                          Visibility="{Binding Overlay.IsLocked, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"
                                          Content="Unlock overlay" />
                            <eye:ButtonEx Command="{Binding ToggleOverlayLockCommand}" Margin="0"
                                          Icon="&#xf023;"
                                          Visibility="{Binding Overlay.IsLocked, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}"
                                          Content="Lock overlay" />
                        </Grid>
                    </DockPanel>
                </st:AutoGrid>
            </ScrollViewer>
        </DockPanel>

        <materialDesign:DrawerHost IsBottomDrawerOpen="{Binding ApplicationUpdater.IsOpen}">
            <materialDesign:DrawerHost.BottomDrawerContent>
                <Grid Height="60">
                    <ContentPresenter Content="{Binding ApplicationUpdater}" />
                </Grid>
            </materialDesign:DrawerHost.BottomDrawerContent>
        </materialDesign:DrawerHost>
    </Grid>

    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands ShowSeparators="True">
            <eye:ButtonEx
                Margin="5,0"
                ToolTip="Open logs/config folder"
                Icon="&#xF07C;"
                Command="{Binding OpenAppDataDirectoryCommand}" />
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands ShowSeparators="True">
            <StackPanel Orientation="Horizontal" ToolTip="Application is running without Administrator privileges, not all features may work correctly, e.g. global hotkeys"
                        Visibility="{Binding IsElevated, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}">
                <materialDesign:PackIcon VerticalAlignment="Center" Kind="ShieldWarning" />
                <TextBlock Margin="2.5,0,0,0" Text="USER-MODE" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <eye:CachedContentControl Content="{Binding ErrorMonitor}"/>
                <eye:ButtonEx Command="{Binding ApplicationUpdater.CheckForUpdatesCommand}"
                              ToolTip="Check for updates"
                              Margin="5,0"
                              Icon="&#xF0ED;" />
                <eye:ButtonEx Command="{Binding ApplicationUpdater.RestartCommand}"
                              ToolTip="Restart application"
                              Margin="5,0"
                              Icon="&#xf021;" />
            </StackPanel>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
</mah:MetroWindow>